name: Build and Deploy Weather App to EC2

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/weather-app:latest .

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/weather-app:latest

    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          set -e

          echo "Verificando si Docker está instalado..."
          if ! command -v docker &> /dev/null; then
            echo "Instalando Docker..."
            sudo apt update
            sudo apt install -y docker.io
            sudo systemctl enable docker
            sudo systemctl start docker
          else
            echo "Docker ya está instalado."
          fi

          echo "Autenticándose en Docker Hub..."
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          echo "Descargando la última imagen..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/weather-app:latest

          echo "Eliminando contenedor anterior si existe..."
          docker stop weather-app || true
          docker rm weather-app || true

          echo "Ejecutando nuevo contenedor..."
          docker run -d --restart always -p 80:80 --name weather-app ${{ secrets.DOCKER_USERNAME }}/weather-app:latest
